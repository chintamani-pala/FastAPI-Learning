"""update user model

Revision ID: 5dd647ba777d
Revises: 
Create Date: 2025-07-20 19:16:55.069565

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5dd647ba777d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('idx_companies_name'), table_name='companies')
    op.drop_index(op.f('idx_companies_name_trgm'), table_name='companies', postgresql_using='gin')
    op.drop_index(op.f('idx_companies_query'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('query', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('date_added', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('source', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('companies_pkey'))
    )
    op.create_index(op.f('idx_companies_query'), 'companies', ['query'], unique=False)
    op.create_index(op.f('idx_companies_name_trgm'), 'companies', ['company_name'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_companies_name'), 'companies', ['company_name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('email', name=op.f('user_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    # ### end Alembic commands ###
